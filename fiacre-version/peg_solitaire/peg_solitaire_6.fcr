type byte is 0..255

process _P (&_a: array 36 of byte, &_peg_count: byte) is
states _q

init to _q

from _q
	case (((_a[((0 * 6) + 0)] = 1) and (_a[(((0 * 6) + 0) + 1)] = 1)) and (_a[(((0 * 6) + 0) + 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 0)] := 0;
	_a[(((0 * 6) + 0) + 1)] := 0;
	_a[(((0 * 6) + 0) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 1)] = 1) and (_a[(((0 * 6) + 1) + 1)] = 1)) and (_a[(((0 * 6) + 1) + 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 1)] := 0;
	_a[(((0 * 6) + 1) + 1)] := 0;
	_a[(((0 * 6) + 1) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 2)] = 1) and (_a[(((0 * 6) + 2) + 1)] = 1)) and (_a[(((0 * 6) + 2) + 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 2)] := 0;
	_a[(((0 * 6) + 2) + 1)] := 0;
	_a[(((0 * 6) + 2) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 3)] = 1) and (_a[(((0 * 6) + 3) + 1)] = 1)) and (_a[(((0 * 6) + 3) + 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 3)] := 0;
	_a[(((0 * 6) + 3) + 1)] := 0;
	_a[(((0 * 6) + 3) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 0)] = 1) and (_a[(((1 * 6) + 0) + 1)] = 1)) and (_a[(((1 * 6) + 0) + 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 0)] := 0;
	_a[(((1 * 6) + 0) + 1)] := 0;
	_a[(((1 * 6) + 0) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 1)] = 1) and (_a[(((1 * 6) + 1) + 1)] = 1)) and (_a[(((1 * 6) + 1) + 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 1)] := 0;
	_a[(((1 * 6) + 1) + 1)] := 0;
	_a[(((1 * 6) + 1) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 2)] = 1) and (_a[(((1 * 6) + 2) + 1)] = 1)) and (_a[(((1 * 6) + 2) + 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 2)] := 0;
	_a[(((1 * 6) + 2) + 1)] := 0;
	_a[(((1 * 6) + 2) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 3)] = 1) and (_a[(((1 * 6) + 3) + 1)] = 1)) and (_a[(((1 * 6) + 3) + 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 3)] := 0;
	_a[(((1 * 6) + 3) + 1)] := 0;
	_a[(((1 * 6) + 3) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 0)] = 1) and (_a[(((2 * 6) + 0) + 1)] = 1)) and (_a[(((2 * 6) + 0) + 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 0)] := 0;
	_a[(((2 * 6) + 0) + 1)] := 0;
	_a[(((2 * 6) + 0) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 1)] = 1) and (_a[(((2 * 6) + 1) + 1)] = 1)) and (_a[(((2 * 6) + 1) + 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 1)] := 0;
	_a[(((2 * 6) + 1) + 1)] := 0;
	_a[(((2 * 6) + 1) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 2)] = 1) and (_a[(((2 * 6) + 2) + 1)] = 1)) and (_a[(((2 * 6) + 2) + 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 2)] := 0;
	_a[(((2 * 6) + 2) + 1)] := 0;
	_a[(((2 * 6) + 2) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 3)] = 1) and (_a[(((2 * 6) + 3) + 1)] = 1)) and (_a[(((2 * 6) + 3) + 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 3)] := 0;
	_a[(((2 * 6) + 3) + 1)] := 0;
	_a[(((2 * 6) + 3) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 0)] = 1) and (_a[(((3 * 6) + 0) + 1)] = 1)) and (_a[(((3 * 6) + 0) + 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 0)] := 0;
	_a[(((3 * 6) + 0) + 1)] := 0;
	_a[(((3 * 6) + 0) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 1)] = 1) and (_a[(((3 * 6) + 1) + 1)] = 1)) and (_a[(((3 * 6) + 1) + 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 1)] := 0;
	_a[(((3 * 6) + 1) + 1)] := 0;
	_a[(((3 * 6) + 1) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 2)] = 1) and (_a[(((3 * 6) + 2) + 1)] = 1)) and (_a[(((3 * 6) + 2) + 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 2)] := 0;
	_a[(((3 * 6) + 2) + 1)] := 0;
	_a[(((3 * 6) + 2) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 3)] = 1) and (_a[(((3 * 6) + 3) + 1)] = 1)) and (_a[(((3 * 6) + 3) + 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 3)] := 0;
	_a[(((3 * 6) + 3) + 1)] := 0;
	_a[(((3 * 6) + 3) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 0)] = 1) and (_a[(((4 * 6) + 0) + 1)] = 1)) and (_a[(((4 * 6) + 0) + 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 0)] := 0;
	_a[(((4 * 6) + 0) + 1)] := 0;
	_a[(((4 * 6) + 0) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 1)] = 1) and (_a[(((4 * 6) + 1) + 1)] = 1)) and (_a[(((4 * 6) + 1) + 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 1)] := 0;
	_a[(((4 * 6) + 1) + 1)] := 0;
	_a[(((4 * 6) + 1) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 2)] = 1) and (_a[(((4 * 6) + 2) + 1)] = 1)) and (_a[(((4 * 6) + 2) + 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 2)] := 0;
	_a[(((4 * 6) + 2) + 1)] := 0;
	_a[(((4 * 6) + 2) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 3)] = 1) and (_a[(((4 * 6) + 3) + 1)] = 1)) and (_a[(((4 * 6) + 3) + 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 3)] := 0;
	_a[(((4 * 6) + 3) + 1)] := 0;
	_a[(((4 * 6) + 3) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 0)] = 1) and (_a[(((5 * 6) + 0) + 1)] = 1)) and (_a[(((5 * 6) + 0) + 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 0)] := 0;
	_a[(((5 * 6) + 0) + 1)] := 0;
	_a[(((5 * 6) + 0) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 1)] = 1) and (_a[(((5 * 6) + 1) + 1)] = 1)) and (_a[(((5 * 6) + 1) + 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 1)] := 0;
	_a[(((5 * 6) + 1) + 1)] := 0;
	_a[(((5 * 6) + 1) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 2)] = 1) and (_a[(((5 * 6) + 2) + 1)] = 1)) and (_a[(((5 * 6) + 2) + 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 2)] := 0;
	_a[(((5 * 6) + 2) + 1)] := 0;
	_a[(((5 * 6) + 2) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 3)] = 1) and (_a[(((5 * 6) + 3) + 1)] = 1)) and (_a[(((5 * 6) + 3) + 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 3)] := 0;
	_a[(((5 * 6) + 3) + 1)] := 0;
	_a[(((5 * 6) + 3) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 2)] = 1) and (_a[(((0 * 6) + 2) - 1)] = 1)) and (_a[(((0 * 6) + 2) - 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 2)] := 0;
	_a[(((0 * 6) + 2) - 1)] := 0;
	_a[(((0 * 6) + 2) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 3)] = 1) and (_a[(((0 * 6) + 3) - 1)] = 1)) and (_a[(((0 * 6) + 3) - 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 3)] := 0;
	_a[(((0 * 6) + 3) - 1)] := 0;
	_a[(((0 * 6) + 3) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 4)] = 1) and (_a[(((0 * 6) + 4) - 1)] = 1)) and (_a[(((0 * 6) + 4) - 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 4)] := 0;
	_a[(((0 * 6) + 4) - 1)] := 0;
	_a[(((0 * 6) + 4) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 5)] = 1) and (_a[(((0 * 6) + 5) - 1)] = 1)) and (_a[(((0 * 6) + 5) - 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 5)] := 0;
	_a[(((0 * 6) + 5) - 1)] := 0;
	_a[(((0 * 6) + 5) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 2)] = 1) and (_a[(((1 * 6) + 2) - 1)] = 1)) and (_a[(((1 * 6) + 2) - 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 2)] := 0;
	_a[(((1 * 6) + 2) - 1)] := 0;
	_a[(((1 * 6) + 2) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 3)] = 1) and (_a[(((1 * 6) + 3) - 1)] = 1)) and (_a[(((1 * 6) + 3) - 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 3)] := 0;
	_a[(((1 * 6) + 3) - 1)] := 0;
	_a[(((1 * 6) + 3) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 4)] = 1) and (_a[(((1 * 6) + 4) - 1)] = 1)) and (_a[(((1 * 6) + 4) - 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 4)] := 0;
	_a[(((1 * 6) + 4) - 1)] := 0;
	_a[(((1 * 6) + 4) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 5)] = 1) and (_a[(((1 * 6) + 5) - 1)] = 1)) and (_a[(((1 * 6) + 5) - 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 5)] := 0;
	_a[(((1 * 6) + 5) - 1)] := 0;
	_a[(((1 * 6) + 5) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 2)] = 1) and (_a[(((2 * 6) + 2) - 1)] = 1)) and (_a[(((2 * 6) + 2) - 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 2)] := 0;
	_a[(((2 * 6) + 2) - 1)] := 0;
	_a[(((2 * 6) + 2) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 3)] = 1) and (_a[(((2 * 6) + 3) - 1)] = 1)) and (_a[(((2 * 6) + 3) - 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 3)] := 0;
	_a[(((2 * 6) + 3) - 1)] := 0;
	_a[(((2 * 6) + 3) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 4)] = 1) and (_a[(((2 * 6) + 4) - 1)] = 1)) and (_a[(((2 * 6) + 4) - 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 4)] := 0;
	_a[(((2 * 6) + 4) - 1)] := 0;
	_a[(((2 * 6) + 4) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 5)] = 1) and (_a[(((2 * 6) + 5) - 1)] = 1)) and (_a[(((2 * 6) + 5) - 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 5)] := 0;
	_a[(((2 * 6) + 5) - 1)] := 0;
	_a[(((2 * 6) + 5) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 2)] = 1) and (_a[(((3 * 6) + 2) - 1)] = 1)) and (_a[(((3 * 6) + 2) - 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 2)] := 0;
	_a[(((3 * 6) + 2) - 1)] := 0;
	_a[(((3 * 6) + 2) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 3)] = 1) and (_a[(((3 * 6) + 3) - 1)] = 1)) and (_a[(((3 * 6) + 3) - 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 3)] := 0;
	_a[(((3 * 6) + 3) - 1)] := 0;
	_a[(((3 * 6) + 3) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 4)] = 1) and (_a[(((3 * 6) + 4) - 1)] = 1)) and (_a[(((3 * 6) + 4) - 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 4)] := 0;
	_a[(((3 * 6) + 4) - 1)] := 0;
	_a[(((3 * 6) + 4) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 5)] = 1) and (_a[(((3 * 6) + 5) - 1)] = 1)) and (_a[(((3 * 6) + 5) - 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 5)] := 0;
	_a[(((3 * 6) + 5) - 1)] := 0;
	_a[(((3 * 6) + 5) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 2)] = 1) and (_a[(((4 * 6) + 2) - 1)] = 1)) and (_a[(((4 * 6) + 2) - 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 2)] := 0;
	_a[(((4 * 6) + 2) - 1)] := 0;
	_a[(((4 * 6) + 2) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 3)] = 1) and (_a[(((4 * 6) + 3) - 1)] = 1)) and (_a[(((4 * 6) + 3) - 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 3)] := 0;
	_a[(((4 * 6) + 3) - 1)] := 0;
	_a[(((4 * 6) + 3) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 4)] = 1) and (_a[(((4 * 6) + 4) - 1)] = 1)) and (_a[(((4 * 6) + 4) - 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 4)] := 0;
	_a[(((4 * 6) + 4) - 1)] := 0;
	_a[(((4 * 6) + 4) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 5)] = 1) and (_a[(((4 * 6) + 5) - 1)] = 1)) and (_a[(((4 * 6) + 5) - 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 5)] := 0;
	_a[(((4 * 6) + 5) - 1)] := 0;
	_a[(((4 * 6) + 5) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 2)] = 1) and (_a[(((5 * 6) + 2) - 1)] = 1)) and (_a[(((5 * 6) + 2) - 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 2)] := 0;
	_a[(((5 * 6) + 2) - 1)] := 0;
	_a[(((5 * 6) + 2) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 3)] = 1) and (_a[(((5 * 6) + 3) - 1)] = 1)) and (_a[(((5 * 6) + 3) - 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 3)] := 0;
	_a[(((5 * 6) + 3) - 1)] := 0;
	_a[(((5 * 6) + 3) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 4)] = 1) and (_a[(((5 * 6) + 4) - 1)] = 1)) and (_a[(((5 * 6) + 4) - 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 4)] := 0;
	_a[(((5 * 6) + 4) - 1)] := 0;
	_a[(((5 * 6) + 4) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 5)] = 1) and (_a[(((5 * 6) + 5) - 1)] = 1)) and (_a[(((5 * 6) + 5) - 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 5)] := 0;
	_a[(((5 * 6) + 5) - 1)] := 0;
	_a[(((5 * 6) + 5) - 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 0)] = 1) and (_a[(((0 + 1) * 6) + 0)] = 1)) and (_a[(((0 + 2) * 6) + 0)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 0)] := 0;
	_a[(((0 + 1) * 6) + 0)] := 0;
	_a[(((0 + 2) * 6) + 0)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 1)] = 1) and (_a[(((0 + 1) * 6) + 1)] = 1)) and (_a[(((0 + 2) * 6) + 1)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 1)] := 0;
	_a[(((0 + 1) * 6) + 1)] := 0;
	_a[(((0 + 2) * 6) + 1)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 2)] = 1) and (_a[(((0 + 1) * 6) + 2)] = 1)) and (_a[(((0 + 2) * 6) + 2)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 2)] := 0;
	_a[(((0 + 1) * 6) + 2)] := 0;
	_a[(((0 + 2) * 6) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 3)] = 1) and (_a[(((0 + 1) * 6) + 3)] = 1)) and (_a[(((0 + 2) * 6) + 3)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 3)] := 0;
	_a[(((0 + 1) * 6) + 3)] := 0;
	_a[(((0 + 2) * 6) + 3)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 4)] = 1) and (_a[(((0 + 1) * 6) + 4)] = 1)) and (_a[(((0 + 2) * 6) + 4)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 4)] := 0;
	_a[(((0 + 1) * 6) + 4)] := 0;
	_a[(((0 + 2) * 6) + 4)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((0 * 6) + 5)] = 1) and (_a[(((0 + 1) * 6) + 5)] = 1)) and (_a[(((0 + 2) * 6) + 5)] = 0)) of
	true -> null
	end case;
	_a[((0 * 6) + 5)] := 0;
	_a[(((0 + 1) * 6) + 5)] := 0;
	_a[(((0 + 2) * 6) + 5)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 0)] = 1) and (_a[(((1 + 1) * 6) + 0)] = 1)) and (_a[(((1 + 2) * 6) + 0)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 0)] := 0;
	_a[(((1 + 1) * 6) + 0)] := 0;
	_a[(((1 + 2) * 6) + 0)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 1)] = 1) and (_a[(((1 + 1) * 6) + 1)] = 1)) and (_a[(((1 + 2) * 6) + 1)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 1)] := 0;
	_a[(((1 + 1) * 6) + 1)] := 0;
	_a[(((1 + 2) * 6) + 1)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 2)] = 1) and (_a[(((1 + 1) * 6) + 2)] = 1)) and (_a[(((1 + 2) * 6) + 2)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 2)] := 0;
	_a[(((1 + 1) * 6) + 2)] := 0;
	_a[(((1 + 2) * 6) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 3)] = 1) and (_a[(((1 + 1) * 6) + 3)] = 1)) and (_a[(((1 + 2) * 6) + 3)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 3)] := 0;
	_a[(((1 + 1) * 6) + 3)] := 0;
	_a[(((1 + 2) * 6) + 3)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 4)] = 1) and (_a[(((1 + 1) * 6) + 4)] = 1)) and (_a[(((1 + 2) * 6) + 4)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 4)] := 0;
	_a[(((1 + 1) * 6) + 4)] := 0;
	_a[(((1 + 2) * 6) + 4)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((1 * 6) + 5)] = 1) and (_a[(((1 + 1) * 6) + 5)] = 1)) and (_a[(((1 + 2) * 6) + 5)] = 0)) of
	true -> null
	end case;
	_a[((1 * 6) + 5)] := 0;
	_a[(((1 + 1) * 6) + 5)] := 0;
	_a[(((1 + 2) * 6) + 5)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 0)] = 1) and (_a[(((2 + 1) * 6) + 0)] = 1)) and (_a[(((2 + 2) * 6) + 0)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 0)] := 0;
	_a[(((2 + 1) * 6) + 0)] := 0;
	_a[(((2 + 2) * 6) + 0)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 1)] = 1) and (_a[(((2 + 1) * 6) + 1)] = 1)) and (_a[(((2 + 2) * 6) + 1)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 1)] := 0;
	_a[(((2 + 1) * 6) + 1)] := 0;
	_a[(((2 + 2) * 6) + 1)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 2)] = 1) and (_a[(((2 + 1) * 6) + 2)] = 1)) and (_a[(((2 + 2) * 6) + 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 2)] := 0;
	_a[(((2 + 1) * 6) + 2)] := 0;
	_a[(((2 + 2) * 6) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 3)] = 1) and (_a[(((2 + 1) * 6) + 3)] = 1)) and (_a[(((2 + 2) * 6) + 3)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 3)] := 0;
	_a[(((2 + 1) * 6) + 3)] := 0;
	_a[(((2 + 2) * 6) + 3)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 4)] = 1) and (_a[(((2 + 1) * 6) + 4)] = 1)) and (_a[(((2 + 2) * 6) + 4)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 4)] := 0;
	_a[(((2 + 1) * 6) + 4)] := 0;
	_a[(((2 + 2) * 6) + 4)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 5)] = 1) and (_a[(((2 + 1) * 6) + 5)] = 1)) and (_a[(((2 + 2) * 6) + 5)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 5)] := 0;
	_a[(((2 + 1) * 6) + 5)] := 0;
	_a[(((2 + 2) * 6) + 5)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 0)] = 1) and (_a[(((3 + 1) * 6) + 0)] = 1)) and (_a[(((3 + 2) * 6) + 0)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 0)] := 0;
	_a[(((3 + 1) * 6) + 0)] := 0;
	_a[(((3 + 2) * 6) + 0)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 1)] = 1) and (_a[(((3 + 1) * 6) + 1)] = 1)) and (_a[(((3 + 2) * 6) + 1)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 1)] := 0;
	_a[(((3 + 1) * 6) + 1)] := 0;
	_a[(((3 + 2) * 6) + 1)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 2)] = 1) and (_a[(((3 + 1) * 6) + 2)] = 1)) and (_a[(((3 + 2) * 6) + 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 2)] := 0;
	_a[(((3 + 1) * 6) + 2)] := 0;
	_a[(((3 + 2) * 6) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 3)] = 1) and (_a[(((3 + 1) * 6) + 3)] = 1)) and (_a[(((3 + 2) * 6) + 3)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 3)] := 0;
	_a[(((3 + 1) * 6) + 3)] := 0;
	_a[(((3 + 2) * 6) + 3)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 4)] = 1) and (_a[(((3 + 1) * 6) + 4)] = 1)) and (_a[(((3 + 2) * 6) + 4)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 4)] := 0;
	_a[(((3 + 1) * 6) + 4)] := 0;
	_a[(((3 + 2) * 6) + 4)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 5)] = 1) and (_a[(((3 + 1) * 6) + 5)] = 1)) and (_a[(((3 + 2) * 6) + 5)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 5)] := 0;
	_a[(((3 + 1) * 6) + 5)] := 0;
	_a[(((3 + 2) * 6) + 5)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 0)] = 1) and (_a[(((2 - 1) * 6) + 0)] = 1)) and (_a[(((2 - 2) * 6) + 0)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 0)] := 0;
	_a[(((2 - 1) * 6) + 0)] := 0;
	_a[(((2 - 2) * 6) + 0)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 1)] = 1) and (_a[(((2 - 1) * 6) + 1)] = 1)) and (_a[(((2 - 2) * 6) + 1)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 1)] := 0;
	_a[(((2 - 1) * 6) + 1)] := 0;
	_a[(((2 - 2) * 6) + 1)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 2)] = 1) and (_a[(((2 - 1) * 6) + 2)] = 1)) and (_a[(((2 - 2) * 6) + 2)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 2)] := 0;
	_a[(((2 - 1) * 6) + 2)] := 0;
	_a[(((2 - 2) * 6) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 3)] = 1) and (_a[(((2 - 1) * 6) + 3)] = 1)) and (_a[(((2 - 2) * 6) + 3)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 3)] := 0;
	_a[(((2 - 1) * 6) + 3)] := 0;
	_a[(((2 - 2) * 6) + 3)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 4)] = 1) and (_a[(((2 - 1) * 6) + 4)] = 1)) and (_a[(((2 - 2) * 6) + 4)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 4)] := 0;
	_a[(((2 - 1) * 6) + 4)] := 0;
	_a[(((2 - 2) * 6) + 4)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((2 * 6) + 5)] = 1) and (_a[(((2 - 1) * 6) + 5)] = 1)) and (_a[(((2 - 2) * 6) + 5)] = 0)) of
	true -> null
	end case;
	_a[((2 * 6) + 5)] := 0;
	_a[(((2 - 1) * 6) + 5)] := 0;
	_a[(((2 - 2) * 6) + 5)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 0)] = 1) and (_a[(((3 - 1) * 6) + 0)] = 1)) and (_a[(((3 - 2) * 6) + 0)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 0)] := 0;
	_a[(((3 - 1) * 6) + 0)] := 0;
	_a[(((3 - 2) * 6) + 0)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 1)] = 1) and (_a[(((3 - 1) * 6) + 1)] = 1)) and (_a[(((3 - 2) * 6) + 1)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 1)] := 0;
	_a[(((3 - 1) * 6) + 1)] := 0;
	_a[(((3 - 2) * 6) + 1)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 2)] = 1) and (_a[(((3 - 1) * 6) + 2)] = 1)) and (_a[(((3 - 2) * 6) + 2)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 2)] := 0;
	_a[(((3 - 1) * 6) + 2)] := 0;
	_a[(((3 - 2) * 6) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 3)] = 1) and (_a[(((3 - 1) * 6) + 3)] = 1)) and (_a[(((3 - 2) * 6) + 3)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 3)] := 0;
	_a[(((3 - 1) * 6) + 3)] := 0;
	_a[(((3 - 2) * 6) + 3)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 4)] = 1) and (_a[(((3 - 1) * 6) + 4)] = 1)) and (_a[(((3 - 2) * 6) + 4)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 4)] := 0;
	_a[(((3 - 1) * 6) + 4)] := 0;
	_a[(((3 - 2) * 6) + 4)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((3 * 6) + 5)] = 1) and (_a[(((3 - 1) * 6) + 5)] = 1)) and (_a[(((3 - 2) * 6) + 5)] = 0)) of
	true -> null
	end case;
	_a[((3 * 6) + 5)] := 0;
	_a[(((3 - 1) * 6) + 5)] := 0;
	_a[(((3 - 2) * 6) + 5)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 0)] = 1) and (_a[(((4 - 1) * 6) + 0)] = 1)) and (_a[(((4 - 2) * 6) + 0)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 0)] := 0;
	_a[(((4 - 1) * 6) + 0)] := 0;
	_a[(((4 - 2) * 6) + 0)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 1)] = 1) and (_a[(((4 - 1) * 6) + 1)] = 1)) and (_a[(((4 - 2) * 6) + 1)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 1)] := 0;
	_a[(((4 - 1) * 6) + 1)] := 0;
	_a[(((4 - 2) * 6) + 1)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 2)] = 1) and (_a[(((4 - 1) * 6) + 2)] = 1)) and (_a[(((4 - 2) * 6) + 2)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 2)] := 0;
	_a[(((4 - 1) * 6) + 2)] := 0;
	_a[(((4 - 2) * 6) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 3)] = 1) and (_a[(((4 - 1) * 6) + 3)] = 1)) and (_a[(((4 - 2) * 6) + 3)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 3)] := 0;
	_a[(((4 - 1) * 6) + 3)] := 0;
	_a[(((4 - 2) * 6) + 3)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 4)] = 1) and (_a[(((4 - 1) * 6) + 4)] = 1)) and (_a[(((4 - 2) * 6) + 4)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 4)] := 0;
	_a[(((4 - 1) * 6) + 4)] := 0;
	_a[(((4 - 2) * 6) + 4)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((4 * 6) + 5)] = 1) and (_a[(((4 - 1) * 6) + 5)] = 1)) and (_a[(((4 - 2) * 6) + 5)] = 0)) of
	true -> null
	end case;
	_a[((4 * 6) + 5)] := 0;
	_a[(((4 - 1) * 6) + 5)] := 0;
	_a[(((4 - 2) * 6) + 5)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 0)] = 1) and (_a[(((5 - 1) * 6) + 0)] = 1)) and (_a[(((5 - 2) * 6) + 0)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 0)] := 0;
	_a[(((5 - 1) * 6) + 0)] := 0;
	_a[(((5 - 2) * 6) + 0)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 1)] = 1) and (_a[(((5 - 1) * 6) + 1)] = 1)) and (_a[(((5 - 2) * 6) + 1)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 1)] := 0;
	_a[(((5 - 1) * 6) + 1)] := 0;
	_a[(((5 - 2) * 6) + 1)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 2)] = 1) and (_a[(((5 - 1) * 6) + 2)] = 1)) and (_a[(((5 - 2) * 6) + 2)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 2)] := 0;
	_a[(((5 - 1) * 6) + 2)] := 0;
	_a[(((5 - 2) * 6) + 2)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 3)] = 1) and (_a[(((5 - 1) * 6) + 3)] = 1)) and (_a[(((5 - 2) * 6) + 3)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 3)] := 0;
	_a[(((5 - 1) * 6) + 3)] := 0;
	_a[(((5 - 2) * 6) + 3)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 4)] = 1) and (_a[(((5 - 1) * 6) + 4)] = 1)) and (_a[(((5 - 2) * 6) + 4)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 4)] := 0;
	_a[(((5 - 1) * 6) + 4)] := 0;
	_a[(((5 - 2) * 6) + 4)] := 1;
	_peg_count := (_peg_count - 1);
	to _q

from _q
	case (((_a[((5 * 6) + 5)] = 1) and (_a[(((5 - 1) * 6) + 5)] = 1)) and (_a[(((5 - 2) * 6) + 5)] = 0)) of
	true -> null
	end case;
	_a[((5 * 6) + 5)] := 0;
	_a[(((5 - 1) * 6) + 5)] := 0;
	_a[(((5 - 2) * 6) + 5)] := 1;
	_peg_count := (_peg_count - 1);
	to _q


component sys is
var 
	
	_a: array 36 of byte := [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], 
	
	_peg_count: byte := 35

par 
	_P(&_a, &_peg_count) 
end par


sys
