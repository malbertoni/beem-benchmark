type byte is 0..255

process _Transreq_0 [_LDind_0: in none, _TX_0: in none, _LDres_0: out none] is
states _idle, _got_msg, _concatenated_tr, _split_tr
var 
	_m: byte 
init to _idle

from _idle
	_LDind_0? _m;
	to _got_msg

from _got_msg
	case (_m = 101) of
	true -> null
	end case;
	_LDres_0! 100;
	to _idle

from _got_msg
	_TX_0;
	to _concatenated_tr

from _got_msg
	to _split_tr

from _concatenated_tr
	_LDres_0! 102;
	to _idle

from _split_tr
	_LDres_0! 107;
	to _idle


process _Transres_0 [_TDreq_0: in none, _LDcon_0: in none, _LDreq_0: out none, _TX_0: out none] is
states _idle, _got_req, _q, _wait_ack, _wait_q
var 
	_dest: byte, 
	_m: byte 
init to _idle

from _idle
	_TDreq_0? _dest;
	to _got_req

from _got_req
	_TX_0;
	to _q

from _got_req
	to _q

from _q
	_LDreq_0! _dest;
	to _wait_ack

from _wait_ack
	_LDcon_0? _m;
	to _wait_q

from _wait_q
	case ((_m = 124) and (_dest = 2)) of
	true -> null
	end case;
	to _idle

from _wait_q
	case ((_m = 105) and (_dest < 2)) of
	true -> null
	end case;
	to _idle

from _wait_q
	case ((_m = 106) and (_dest < 2)) of
	true -> null
	end case;
	to _idle


process _Link_0 [_LDreq_0: in none, _LDres_0: in none, _PAcon_0: in none, _PDind_0: in none, _PCind_0: in none, _LDcon_0: out none, _LDind_0: out none, _PDreq_0: out none, _PAreq_0: out none] is
states _link0, _link0r, _link0a, _link0i, _link2req, _q1, _s1, _q2, _s2, _q3, _s3, _q4, _s4, _q5, _s5, _q6, _s6, _link3, _link3q, _link3A, _link3Aq, _link3RE, _link3REq1, _link3REq2, _linkWSA, _linkWSAq, _linkWSAa1, _linkWSAa2, _link4, _link4q, _link4DH, _link4DHq, _link4RH, _link4RHq, _link4RD, _link4RDq, _link4RE, _link4REq, _link4DRec, _link4BRec, _link4DRecq, _link4DRecq2, _link5, _p1, _p2, _link6, _p3, _p4, _p5, _p6, _link7
var 
	_buf: int := (- 1), 
	_dest: byte, 
	_m: byte, 
	_m2: byte, 
	_data: byte 
init to _link0

from _link0
	_LDreq_0? _buf;
	to _link0r

from _link0r
	_PAreq_0! 108;
	to _link0

from _link0
	_PAcon_0? _m;
	to _link0a

from _link0a
	case (_m = 111) of
	true -> null
	end case;
	to _link0

from _link0a
	case (_m = 110) of
	true -> null
	end case;
	_dest := _buf;
	to _link2req

from _link0
	_PDind_0? _m;
	to _link0i

from _link0i
	case (_m <> 119) of
	true -> null
	end case;
	to _link0

from _link0i
	case (_m = 119) of
	true -> null
	end case;
	to _link4

from _link2req
	_PCind_0;
	to _q1

from _q1
	_PDreq_0! 119;
	to _s1

from _s1
	_PCind_0;
	to _q2

from _q2
	_PDreq_0! 118;
	to _s2

from _s2
	_PCind_0;
	to _q3

from _q3
	_PDreq_0! _dest;
	to _s3

from _s3
	_PCind_0;
	to _q4

from _q4
	_PDreq_0! 114;
	to _s4

from _s4
	_PCind_0;
	to _q5

from _q5
	_PDreq_0! 116;
	to _s5

from _s5
	_PCind_0;
	to _q6

from _q6
	_PDreq_0! 120;
	to _s6

from _s6
	case (_dest = 2) of
	true -> null
	end case;
	_LDcon_0! 124;
	_buf := (- 1);
	to _link0

from _s6
	case (_dest < 2) of
	true -> null
	end case;
	to _link3

from _link3
	_PDind_0? _m;
	to _link3q

from _link3q
	case (_m = 121) of
	true -> null
	end case;
	to _link3

from _link3q
	case (_m = 122) of
	true -> null
	end case;
	_LDcon_0! 106;
	to _link0

from _link3q
	case (_m = 119) of
	true -> null
	end case;
	to _link3A

from _link3q
	case (((_m <> 122) and (_m <> 121)) and (_m <> 119)) of
	true -> null
	end case;
	_LDcon_0! 106;
	_dest := 2;
	to _linkWSA

from _link3A
	_PDind_0? _m;
	to _link3Aq

from _link3Aq
	case (((_m = 119) or (_m = 120)) or (_m = 122)) of
	true -> null
	end case;
	_LDcon_0! 106;
	_dest := 2;
	to _linkWSA

from _link3Aq
	case (not (((_m = 119) or (_m = 120)) or (_m = 122))) of
	true -> null
	end case;
	to _link3RE

from _link3RE
	_PDind_0? _m2;
	to _link3REq1

from _link3REq1
	case ((_m = 112) and ((_m2 = 121) or (_m2 = 120))) of
	true -> null
	end case;
	_LDcon_0! 105;
	to _link3REq2

from _link3REq1
	case (not ((_m = 112) and ((_m2 = 121) or (_m2 = 120)))) of
	true -> null
	end case;
	_LDcon_0! 106;
	to _link3REq2

from _link3REq2
	case (_m2 = 122) of
	true -> null
	end case;
	to _link0

from _link3REq2
	case (_m2 <> 122) of
	true -> null
	end case;
	_dest := 2;
	to _linkWSA

from _linkWSA
	_PDind_0? _m;
	to _linkWSAq

from _linkWSAq
	case (_m <> 122) of
	true -> null
	end case;
	to _linkWSA

from _linkWSAq
	case (_m = 122) of
	true -> null
	end case;
	to _link0

from _linkWSA
	case (_dest = 0) of
	true -> null
	end case;
	_PAcon_0? _m;
	to _linkWSAa1

from _linkWSAa1
	case (_m = 110) of
	true -> null
	end case;
	_PCind_0;
	to _linkWSAa2

from _linkWSAa2
	_PDreq_0! 120;
	to _link0

from _link4
	_PDind_0? _m;
	to _link4q

from _link4q
	case (_m = 122) of
	true -> null
	end case;
	to _link0

from _link4q
	case (((_m = 119) or (_m = 120)) or (_m = 122)) of
	true -> null
	end case;
	_dest := 2;
	to _linkWSA

from _link4q
	case ((_m <> 122) and (not (((_m = 119) or (_m = 120)) or (_m = 122)))) of
	true -> null
	end case;
	to _link4DH

from _link4DH
	_PDind_0? _dest;
	to _link4DHq

from _link4DHq
	case (_dest = 122) of
	true -> null
	end case;
	to _link0

from _link4DHq
	case (_dest = 0) of
	true -> null
	end case;
	_PAreq_0! 109;
	to _link4RH

from _link4DHq
	case (_dest = 2) of
	true -> null
	end case;
	to _link4RH

from _link4DHq
	case (((_dest <> 122) and (_dest <> 0)) and (_dest <> 2)) of
	true -> null
	end case;
	_dest := 2;
	to _linkWSA

from _link4RH
	_PDind_0? _m;
	to _link4RHq

from _link4RHq
	case (_m = 114) of
	true -> null
	end case;
	to _link4RD

from _link4RHq
	case (_m <> 114) of
	true -> null
	end case;
	to _linkWSA

from _link4RD
	_PDind_0? _data;
	to _link4RDq

from _link4RDq
	case ((_data = 116) or (_data = 117)) of
	true -> null
	end case;
	to _link4RE

from _link4RDq
	case (not ((_data = 116) or (_data = 117))) of
	true -> null
	end case;
	to _linkWSA

from _link4RE
	_PDind_0? _m;
	to _link4REq

from _link4REq
	case (((_m = 120) or (_m = 121)) and (_dest = 0)) of
	true -> null
	end case;
	to _link4DRec

from _link4REq
	case (((_m = 120) or (_m = 121)) and (_dest = 2)) of
	true -> null
	end case;
	to _link4BRec

from _link4REq
	case (not ((_m = 120) or (_m = 121))) of
	true -> null
	end case;
	to _linkWSA

from _link4BRec
	case (_data = 116) of
	true -> null
	end case;
	_LDind_0! 101;
	to _link0

from _link4BRec
	case (_data <> 116) of
	true -> null
	end case;
	to _link0

from _link4DRec
	case (_data = 116) of
	true -> null
	end case;
	_LDind_0! 103;
	to _link4DRecq

from _link4DRec
	case (_data = 117) of
	true -> null
	end case;
	_LDind_0! 104;
	to _link4DRecq

from _link4DRecq
	_PAcon_0? _m;
	to _link4DRecq2

from _link4DRecq2
	case (_m = 110) of
	true -> null
	end case;
	to _link5

from _link5
	_PCind_0;
	to _p1

from _p1
	_PDreq_0! 121;
	to _link5

from _link5
	_LDres_0? _m;
	to _link6

from _link6
	_PCind_0;
	to _p2

from _p2
	_PDreq_0! 119;
	to _p3

from _p3
	_PCind_0;
	to _p4

from _p4
	_PDreq_0! 112;
	to _p5

from _p5
	case (_m = 107) of
	true -> null
	end case;
	_PDreq_0! 120;
	to _link0

from _p5
	case (_m <> 107) of
	true -> null
	end case;
	_PDreq_0! 121;
	to _link7

from _link7
	_PCind_0;
	to _p6

from _p6
	_PDreq_0! 121;
	to _link7

from _link7
	_LDreq_0? _dest;
	to _link2req


process _Transreq_1 [_LDind_1: in none, _TX_1: in none, _LDres_1: out none] is
states _idle, _got_msg, _concatenated_tr, _split_tr
var 
	_m: byte 
init to _idle

from _idle
	_LDind_1? _m;
	to _got_msg

from _got_msg
	case (_m = 101) of
	true -> null
	end case;
	_LDres_1! 100;
	to _idle

from _got_msg
	_TX_1;
	to _concatenated_tr

from _got_msg
	to _split_tr

from _concatenated_tr
	_LDres_1! 102;
	to _idle

from _split_tr
	_LDres_1! 107;
	to _idle


process _Transres_1 [_LDcon_1: in none, _TDreq_1: in none, _LDreq_1: out none, _TX_1: out none] is
states _idle, _got_req, _q, _wait_ack, _wait_q
var 
	_dest: byte, 
	_m: byte 
init to _idle

from _idle
	_TDreq_1? _dest;
	to _got_req

from _got_req
	_TX_1;
	to _q

from _got_req
	to _q

from _q
	_LDreq_1! _dest;
	to _wait_ack

from _wait_ack
	_LDcon_1? _m;
	to _wait_q

from _wait_q
	case ((_m = 124) and (_dest = 2)) of
	true -> null
	end case;
	to _idle

from _wait_q
	case ((_m = 105) and (_dest < 2)) of
	true -> null
	end case;
	to _idle

from _wait_q
	case ((_m = 106) and (_dest < 2)) of
	true -> null
	end case;
	to _idle


process _Link_1 [_PAcon_1: in none, _LDres_1: in none, _LDreq_1: in none, _PDind_1: in none, _PCind_1: in none, _LDcon_1: out none, _LDind_1: out none, _PAreq_1: out none, _PDreq_1: out none] is
states _link0, _link0r, _link0a, _link0i, _link2req, _q1, _s1, _q2, _s2, _q3, _s3, _q4, _s4, _q5, _s5, _q6, _s6, _link3, _link3q, _link3A, _link3Aq, _link3RE, _link3REq1, _link3REq2, _linkWSA, _linkWSAq, _linkWSAa1, _linkWSAa2, _link4, _link4q, _link4DH, _link4DHq, _link4RH, _link4RHq, _link4RD, _link4RDq, _link4RE, _link4REq, _link4DRec, _link4BRec, _link4DRecq, _link4DRecq2, _link5, _p1, _p2, _link6, _p3, _p4, _p5, _p6, _link7
var 
	_buf: int := (- 1), 
	_dest: byte, 
	_m: byte, 
	_m2: byte, 
	_data: byte 
init to _link0

from _link0
	_LDreq_1? _buf;
	to _link0r

from _link0r
	_PAreq_1! 108;
	to _link0

from _link0
	_PAcon_1? _m;
	to _link0a

from _link0a
	case (_m = 111) of
	true -> null
	end case;
	to _link0

from _link0a
	case (_m = 110) of
	true -> null
	end case;
	_dest := _buf;
	to _link2req

from _link0
	_PDind_1? _m;
	to _link0i

from _link0i
	case (_m <> 119) of
	true -> null
	end case;
	to _link0

from _link0i
	case (_m = 119) of
	true -> null
	end case;
	to _link4

from _link2req
	_PCind_1;
	to _q1

from _q1
	_PDreq_1! 119;
	to _s1

from _s1
	_PCind_1;
	to _q2

from _q2
	_PDreq_1! 118;
	to _s2

from _s2
	_PCind_1;
	to _q3

from _q3
	_PDreq_1! _dest;
	to _s3

from _s3
	_PCind_1;
	to _q4

from _q4
	_PDreq_1! 114;
	to _s4

from _s4
	_PCind_1;
	to _q5

from _q5
	_PDreq_1! 116;
	to _s5

from _s5
	_PCind_1;
	to _q6

from _q6
	_PDreq_1! 120;
	to _s6

from _s6
	case (_dest = 2) of
	true -> null
	end case;
	_LDcon_1! 124;
	_buf := (- 1);
	to _link0

from _s6
	case (_dest < 2) of
	true -> null
	end case;
	to _link3

from _link3
	_PDind_1? _m;
	to _link3q

from _link3q
	case (_m = 121) of
	true -> null
	end case;
	to _link3

from _link3q
	case (_m = 122) of
	true -> null
	end case;
	_LDcon_1! 106;
	to _link0

from _link3q
	case (_m = 119) of
	true -> null
	end case;
	to _link3A

from _link3q
	case (((_m <> 122) and (_m <> 121)) and (_m <> 119)) of
	true -> null
	end case;
	_LDcon_1! 106;
	_dest := 2;
	to _linkWSA

from _link3A
	_PDind_1? _m;
	to _link3Aq

from _link3Aq
	case (((_m = 119) or (_m = 120)) or (_m = 122)) of
	true -> null
	end case;
	_LDcon_1! 106;
	_dest := 2;
	to _linkWSA

from _link3Aq
	case (not (((_m = 119) or (_m = 120)) or (_m = 122))) of
	true -> null
	end case;
	to _link3RE

from _link3RE
	_PDind_1? _m2;
	to _link3REq1

from _link3REq1
	case ((_m = 112) and ((_m2 = 121) or (_m2 = 120))) of
	true -> null
	end case;
	_LDcon_1! 105;
	to _link3REq2

from _link3REq1
	case (not ((_m = 112) and ((_m2 = 121) or (_m2 = 120)))) of
	true -> null
	end case;
	_LDcon_1! 106;
	to _link3REq2

from _link3REq2
	case (_m2 = 122) of
	true -> null
	end case;
	to _link0

from _link3REq2
	case (_m2 <> 122) of
	true -> null
	end case;
	_dest := 2;
	to _linkWSA

from _linkWSA
	_PDind_1? _m;
	to _linkWSAq

from _linkWSAq
	case (_m <> 122) of
	true -> null
	end case;
	to _linkWSA

from _linkWSAq
	case (_m = 122) of
	true -> null
	end case;
	to _link0

from _linkWSA
	case (_dest = 1) of
	true -> null
	end case;
	_PAcon_1? _m;
	to _linkWSAa1

from _linkWSAa1
	case (_m = 110) of
	true -> null
	end case;
	_PCind_1;
	to _linkWSAa2

from _linkWSAa2
	_PDreq_1! 120;
	to _link0

from _link4
	_PDind_1? _m;
	to _link4q

from _link4q
	case (_m = 122) of
	true -> null
	end case;
	to _link0

from _link4q
	case (((_m = 119) or (_m = 120)) or (_m = 122)) of
	true -> null
	end case;
	_dest := 2;
	to _linkWSA

from _link4q
	case ((_m <> 122) and (not (((_m = 119) or (_m = 120)) or (_m = 122)))) of
	true -> null
	end case;
	to _link4DH

from _link4DH
	_PDind_1? _dest;
	to _link4DHq

from _link4DHq
	case (_dest = 122) of
	true -> null
	end case;
	to _link0

from _link4DHq
	case (_dest = 1) of
	true -> null
	end case;
	_PAreq_1! 109;
	to _link4RH

from _link4DHq
	case (_dest = 2) of
	true -> null
	end case;
	to _link4RH

from _link4DHq
	case (((_dest <> 122) and (_dest <> 1)) and (_dest <> 2)) of
	true -> null
	end case;
	_dest := 2;
	to _linkWSA

from _link4RH
	_PDind_1? _m;
	to _link4RHq

from _link4RHq
	case (_m = 114) of
	true -> null
	end case;
	to _link4RD

from _link4RHq
	case (_m <> 114) of
	true -> null
	end case;
	to _linkWSA

from _link4RD
	_PDind_1? _data;
	to _link4RDq

from _link4RDq
	case ((_data = 116) or (_data = 117)) of
	true -> null
	end case;
	to _link4RE

from _link4RDq
	case (not ((_data = 116) or (_data = 117))) of
	true -> null
	end case;
	to _linkWSA

from _link4RE
	_PDind_1? _m;
	to _link4REq

from _link4REq
	case (((_m = 120) or (_m = 121)) and (_dest = 1)) of
	true -> null
	end case;
	to _link4DRec

from _link4REq
	case (((_m = 120) or (_m = 121)) and (_dest = 2)) of
	true -> null
	end case;
	to _link4BRec

from _link4REq
	case (not ((_m = 120) or (_m = 121))) of
	true -> null
	end case;
	to _linkWSA

from _link4BRec
	case (_data = 116) of
	true -> null
	end case;
	_LDind_1! 101;
	to _link0

from _link4BRec
	case (_data <> 116) of
	true -> null
	end case;
	to _link0

from _link4DRec
	case (_data = 116) of
	true -> null
	end case;
	_LDind_1! 103;
	to _link4DRecq

from _link4DRec
	case (_data = 117) of
	true -> null
	end case;
	_LDind_1! 104;
	to _link4DRecq

from _link4DRecq
	_PAcon_1? _m;
	to _link4DRecq2

from _link4DRecq2
	case (_m = 110) of
	true -> null
	end case;
	to _link5

from _link5
	_PCind_1;
	to _p1

from _p1
	_PDreq_1! 121;
	to _link5

from _link5
	_LDres_1? _m;
	to _link6

from _link6
	_PCind_1;
	to _p2

from _p2
	_PDreq_1! 119;
	to _p3

from _p3
	_PCind_1;
	to _p4

from _p4
	_PDreq_1! 112;
	to _p5

from _p5
	case (_m = 107) of
	true -> null
	end case;
	_PDreq_1! 120;
	to _link0

from _p5
	case (_m <> 107) of
	true -> null
	end case;
	_PDreq_1! 121;
	to _link7

from _link7
	_PCind_1;
	to _p6

from _p6
	_PDreq_1! 121;
	to _link7

from _link7
	_LDreq_1? _dest;
	to _link2req


process _Bus [_PAreq_1: in none, _PDreq_1: in none, _PDreq_0: in none, _PAreq_0: in none, _PAcon_1: out none, _PAcon_0: out none, _PDind_1: out none, _PCind_0: out none, _PCind_1: out none, _PDind_0: out none] is
states _idle, _arbresgab, _idleq, _bus_busy, _busyq, _sub_action_gab, _get_next_packet, _resolve, _resolveq, _resolve2, _resolve2q, _distribute, _distributeq, _dest_cor, _data_dummy
var 
	_t: array 2 of byte, 
	_destfault: array 2 of byte, 
	_next: array 2 of byte, 
	_i: byte, 
	_j: byte, 
	_m: byte, 
	_busy: byte 
init to _idle

from _idle
	case (not ((_t[0] = 0) and (_t[1] = 0))) of
	true -> null
	end case;
	to _arbresgab

from _arbresgab
	_t[0] := 0;
	_t[1] := 0;
	to _idle

from _idle
	_PAreq_0? _m;
	_i := 0;
	to _idleq

from _idle
	_PAreq_1? _m;
	_i := 1;
	to _idleq

from _idleq
	case ((_i = 0) and (_t[_i] = 1)) of
	true -> null
	end case;
	_PAcon_0! 111;
	to _idle

from _idleq
	case ((_i = 1) and (_t[_i] = 1)) of
	true -> null
	end case;
	_PAcon_1! 111;
	to _idle

from _idleq
	case ((_i = 0) and (_t[_i] = 0)) of
	true -> null
	end case;
	_PAcon_0! 110;
	_t[_i] := 1;
	_busy := _i;
	to _bus_busy

from _idleq
	case ((_i = 1) and (_t[_i] = 0)) of
	true -> null
	end case;
	_PAcon_1! 110;
	_t[_i] := 1;
	_busy := _i;
	to _bus_busy

from _bus_busy
	_PAreq_0? _m;
	_i := 0;
	to _busyq

from _bus_busy
	_PAreq_1? _m;
	_i := 1;
	to _busyq

from _busyq
	case ((_m = 108) and (_i = 0)) of
	true -> null
	end case;
	_PAcon_0! 111;
	to _bus_busy

from _busyq
	case ((_m = 108) and (_i = 1)) of
	true -> null
	end case;
	_PAcon_1! 111;
	to _bus_busy

from _busyq
	case (_m = 109) of
	true -> null
	end case;
	_next[_i] := 1;
	to _bus_busy

from _bus_busy
	case (_busy = 0) of
	true -> null
	end case;
	_PCind_0;
	to _get_next_packet

from _bus_busy
	case (_busy = 1) of
	true -> null
	end case;
	_PCind_1;
	to _get_next_packet

from _get_next_packet
	case (_busy = 0) of
	true -> null
	end case;
	_PDreq_0? _m;
	_j := 0;
	to _distribute

from _get_next_packet
	case (_busy = 1) of
	true -> null
	end case;
	_PDreq_1? _m;
	_j := 0;
	to _distribute

from _distribute
	case (_j = _busy) of
	true -> null
	end case;
	_j := (_j + 1);
	to _distribute

from _distribute
	case (0 = _j) of
	true -> null
	end case;
	_PAreq_0? _m;
	to _distributeq

from _distribute
	case (1 = _j) of
	true -> null
	end case;
	_PAreq_1? _m;
	to _distributeq

from _distributeq
	case ((_m = 108) and (_j = 0)) of
	true -> null
	end case;
	_PAcon_0! 111;
	to _distribute

from _distributeq
	case ((_m = 108) and (_j = 1)) of
	true -> null
	end case;
	_PAcon_1! 111;
	to _distribute

from _distributeq
	case (_m = 109) of
	true -> null
	end case;
	_next[_j] := 1;
	to _distribute

from _distribute
	case ((0 = _j) and (not ((_m = 114) and (_destfault[_j] = 1)))) of
	true -> null
	end case;
	_PDind_0! _m;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((1 = _j) and (not ((_m = 114) and (_destfault[_j] = 1)))) of
	true -> null
	end case;
	_PDind_1! _m;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((0 = _j) and (_m = 116)) of
	true -> null
	end case;
	_PDind_0! _m;
	to _data_dummy

from _distribute
	case ((1 = _j) and (_m = 116)) of
	true -> null
	end case;
	_PDind_1! _m;
	to _data_dummy

from _data_dummy
	case (0 = _j) of
	true -> null
	end case;
	_PDind_0! 123;
	_j := (_j + 1);
	to _distribute

from _data_dummy
	case (1 = _j) of
	true -> null
	end case;
	_PDind_1! 123;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((0 = _j) and (_m = 116)) of
	true -> null
	end case;
	_PDind_0! 117;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((1 = _j) and (_m = 116)) of
	true -> null
	end case;
	_PDind_1! 117;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((0 = _j) and (_m = 114)) of
	true -> null
	end case;
	_PDind_0! 115;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((1 = _j) and (_m = 114)) of
	true -> null
	end case;
	_PDind_1! 115;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((0 = _j) and (_m = 112)) of
	true -> null
	end case;
	_PDind_0! 113;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((1 = _j) and (_m = 112)) of
	true -> null
	end case;
	_PDind_1! 113;
	_j := (_j + 1);
	to _distribute

from _distribute
	case (((_j <> _busy) and (_j < 2)) and (_m < 100)) of
	true -> null
	end case;
	_destfault[_j] := 1;
	_i := 0;
	to _dest_cor

from _distribute
	case (((_j <> _busy) and (_j < 2)) and (_m < 100)) of
	true -> null
	end case;
	_destfault[_j] := 1;
	_i := 1;
	to _dest_cor

from _dest_cor
	case (0 = _j) of
	true -> null
	end case;
	_PDind_0! _i;
	_j := (_j + 1);
	to _distribute

from _dest_cor
	case (1 = _j) of
	true -> null
	end case;
	_PDind_1! _i;
	_j := (_j + 1);
	to _distribute

from _distribute
	case ((_j = 2) and (_m <> 120)) of
	true -> null
	end case;
	to _bus_busy

from _distribute
	case ((_j = 2) and (_m = 120)) of
	true -> null
	end case;
	_busy := 2;
	to _bus_busy

from _bus_busy
	case (((_busy = 2) and (_next[0] = 0)) and (_next[1] = 0)) of
	true -> null
	end case;
	_j := 0;
	to _sub_action_gab

from _bus_busy
	case ((_busy = 2) and (not ((_next[0] = 0) and (_next[1] = 0)))) of
	true -> null
	end case;
	_j := 0;
	to _resolve

from _resolve
	case ((_j < 2) and (_next[_j] = 0)) of
	true -> null
	end case;
	_j := (_j + 1);
	to _resolve

from _resolve
	case ((0 = _j) and (_next[_j] = 1)) of
	true -> null
	end case;
	_PAcon_0! 110;
	to _resolveq

from _resolve
	case ((1 = _j) and (_next[_j] = 1)) of
	true -> null
	end case;
	_PAcon_1! 110;
	to _resolveq

from _resolveq
	case (0 = _j) of
	true -> null
	end case;
	_PCind_0;
	_j := (_j + 1);
	to _resolve

from _resolveq
	case (1 = _j) of
	true -> null
	end case;
	_PCind_1;
	_j := (_j + 1);
	to _resolve

from _resolve
	case (_j = 2) of
	true -> null
	end case;
	to _resolve2

from _resolve2
	_PDreq_0? _m;
	_j := 0;
	to _resolve2q

from _resolve2
	_PDreq_1? _m;
	_j := 1;
	to _resolve2q

from _resolve2q
	case ((not (((_next[0] = 0) and (_next[1] = 0)) or ((_next[0] + _next[1]) = 1))) and (_m <> 120)) of
	true -> null
	end case;
	to _resolve

from _resolve2q
	case ((not (((_next[0] = 0) and (_next[1] = 0)) or ((_next[0] + _next[1]) = 1))) and (_m = 120)) of
	true -> null
	end case;
	_next[_j] := 0;
	to _resolve

from _resolve2q
	case (((_next[0] + _next[1]) = 1) and (_m = 120)) of
	true -> null
	end case;
	_next[_j] := 0;
	_j := 0;
	to _sub_action_gab

from _resolve2q
	case (((_next[0] + _next[1]) = 1) and (_m <> 120)) of
	true -> null
	end case;
	_busy := _j;
	_next[_j] := 0;
	_j := 0;
	to _distribute

from _sub_action_gab
	case (0 = _j) of
	true -> null
	end case;
	_PDind_0! 122;
	_j := (_j + 1);
	to _sub_action_gab

from _sub_action_gab
	case (1 = _j) of
	true -> null
	end case;
	_PDind_1! 122;
	_j := (_j + 1);
	to _sub_action_gab

from _sub_action_gab
	case (_j = 2) of
	true -> null
	end case;
	to _idle


process _Application_0 [_TDreq_0: out none] is
states _q, _r

init to _q

from _q
	_TDreq_0! 1;
	to _r


process _Application_1 [_TDreq_1: out none] is
states _q, _r

init to _q

from _q
	_TDreq_1! 0;
	to _r


component sys is
port 
	_LDreq_0: none, 
	_LDres_0: none, 
	_LDcon_0: none, 
	_LDind_0: none, 
	_TX_0: none, 
	_PDreq_0: none, 
	_PDind_0: none, 
	_PAreq_0: none, 
	_PAcon_0: none, 
	_PCind_0: none, 
	_TDreq_0: none, 
	_LDreq_1: none, 
	_LDres_1: none, 
	_LDcon_1: none, 
	_LDind_1: none, 
	_TX_1: none, 
	_PDreq_1: none, 
	_PDind_1: none, 
	_PAreq_1: none, 
	_PAcon_1: none, 
	_PCind_1: none, 
	_TDreq_1: none

par 
	_Transreq_0
	 || _Transres_0
	 || _Link_0
	 || _Transreq_1
	 || _Transres_1
	 || _Link_1
	 || _Bus
	 || _Application_0
	 || _Application_1
end par


sys
