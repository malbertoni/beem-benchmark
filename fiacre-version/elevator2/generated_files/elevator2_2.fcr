type byte is 0..255

process _cabin (&_v: byte, &_p: int, &_t: read int, &_req: write array 10 of byte) is
states _idle, _mov, _open

init to _idle

from _idle
	case (_v > 0) of
	true -> null
	end case;
	to _mov

from _mov
	case (_t = _p) of
	true -> null
	end case;
	to _open

from _mov
	case (_t < _p) of
	true -> null
	end case;
	_p := (_p - 1);
	to _mov

from _mov
	case (_t > _p) of
	true -> null
	end case;
	_p := (_p + 1);
	to _mov

from _open
	_req[_p] := 0;
	_v := 0;
	to _idle


process _environment (&_req: array 10 of byte) is
states _read

init to _read

from _read
	case (_req[0] = 0) of
	true -> null
	end case;
	_req[0] := 1;
	to _read

from _read
	case (_req[1] = 0) of
	true -> null
	end case;
	_req[1] := 1;
	to _read

from _read
	case (_req[2] = 0) of
	true -> null
	end case;
	_req[2] := 1;
	to _read

from _read
	case (_req[3] = 0) of
	true -> null
	end case;
	_req[3] := 1;
	to _read

from _read
	case (_req[4] = 0) of
	true -> null
	end case;
	_req[4] := 1;
	to _read

from _read
	case (_req[5] = 0) of
	true -> null
	end case;
	_req[5] := 1;
	to _read

from _read
	case (_req[6] = 0) of
	true -> null
	end case;
	_req[6] := 1;
	to _read

from _read
	case (_req[7] = 0) of
	true -> null
	end case;
	_req[7] := 1;
	to _read

from _read
	case (_req[8] = 0) of
	true -> null
	end case;
	_req[8] := 1;
	to _read

from _read
	case (_req[9] = 0) of
	true -> null
	end case;
	_req[9] := 1;
	to _read


process _controller (&_v: byte, &_req: read array 10 of byte, &_t: write int) is
states _wait, _work, _done

init to _wait

from _wait
	case (_v = 0) of
	true -> null
	end case;
	to _work

from _work
	case (_req[0] = 1) of
	true -> null
	end case;
	_t := 0;
	to _done

from _work
	case (_req[1] = 1) of
	true -> null
	end case;
	_t := 1;
	to _done

from _work
	case (_req[2] = 1) of
	true -> null
	end case;
	_t := 2;
	to _done

from _work
	case (_req[3] = 1) of
	true -> null
	end case;
	_t := 3;
	to _done

from _work
	case (_req[4] = 1) of
	true -> null
	end case;
	_t := 4;
	to _done

from _work
	case (_req[5] = 1) of
	true -> null
	end case;
	_t := 5;
	to _done

from _work
	case (_req[6] = 1) of
	true -> null
	end case;
	_t := 6;
	to _done

from _work
	case (_req[7] = 1) of
	true -> null
	end case;
	_t := 7;
	to _done

from _work
	case (_req[8] = 1) of
	true -> null
	end case;
	_t := 8;
	to _done

from _work
	case (_req[9] = 1) of
	true -> null
	end case;
	_t := 9;
	to _done

from _done
	_v := 1;
	to _wait


component sys is
var 
	
	_req: array 10 of byte, 
	
	_t: int, 
	
	_p: int, 
	
	_v: byte

par 
	_cabin(&_v, &_p, &_t, &_req) 
	 || _environment(&_req) 
	 || _controller(&_v, &_req, &_t) 
end par


sys
